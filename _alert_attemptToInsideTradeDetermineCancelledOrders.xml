<analytic>
	<analytic>.alert.attemptToInsideTradeDetermineCancelledOrders</analytic>
	<code_text>{[data]
	
	.log.out[.z.h;"starting .alert.attemptToInsideTradeDeterminedCancelledOrders";()];
	
	data:update sourceDataOrderID:(orderID,'string[sourceData]) from data;
	/cancelledOrderIDs:exec distinct sourceDataOrderID from data where orderStatus =`cancelled;
	cancelledOrderIDs:select sourceDataOrderID,cancelTime:transactTime from data where orderStatus =`cancelled;
	finalOrderEntrySummary:select sourceDataOrderID,rowNum from data where orderStatus in `new`replaced;
	finalOrderEntrySummary:select from finalOrderEntrySummary where rowNum=(max;rowNum)fby sourceDataOrderID;		
	data:select from data where rowNum in exec rowNum from finalOrderEntrySummary;
	/data:update eventuallyCancelled:1b from data where sourceDataOrderID in cancelledOrderIDs;
	data:{update eventuallyCancelled:1b from x where not null cancelTime}data lj 1!cancelledOrderIDs;
	delete cancelledOrderIDs,finalOrderEntrySummary from `.;
	data	

}</code_text>
	<description>The benchmark function that will query the DB to genereate the benchmark for the unusual trade volume

</description>
	<dictionaryparams>0</dictionaryparams>
	<typ>Analytic</typ>
	<private>0</private>
	<returntype></returntype>
	<returndata></returndata>
	<defaultconnection></defaultconnection>
	<alias></alias>
	<analytictype>polling</analytictype>
	<returndescription></returndescription>
	<param>
		<parameter>data</parameter>
		<default></default>
		<description>default parameter</description>
		<required>1</required>
		<datatype>Symbol</datatype>
	</param>
	<analyticgroup>SurveillanceAlert</analyticgroup>
	<analyticgroup>SurveillanceBenchmark</analyticgroup>
	<analyticgroup>SurveillanceGW</analyticgroup>
</analytic>
